get_master_ip() {
   for ii in $(cat /proc/cmdline); do
      xcat_server_ip=$(echo $ii | awk -F= '{if($1=="XCAT") print $2}' | awk -F: '{print $1}')
      [ -n "$xcat_server_ip" ] && break
   done
   [ -f /opt/xcat/xcatinfo ] &&  . /opt/xcat/xcatinfo
   [ ! -n "$xcat_server_ip" -a -n "$XCATSERVER" ] &&  xcat_server_ip=$XCATSERVER
   [ ! -n "$xcat_server_ip" -a -f /xcatpost/mypostscript ] && xcat_server_ip=$(awk -F= '{if("^MASTER_IP" == $1) print $2}' /xcatpost/mypostscript)
   [ -n "$xcat_server_ip" ] && echo $xcat_server_ip
}

reset() {
   local eth_mac
   eth_mac=$1
   [ -n "$eth_mac" ] || return 1
   if [ -f /xcatpost/mypostscript ]; then
       db_mac_addr=$(awk -F= '{if($1=="MACADDRESS") print $2}' /xcatpost/mypostscript)
       [ "$db_mac_addr" != "$eth_mac" ] && ipmitool chassis power reset
   fi
}

if [ -f /global/xcat_boot.d/bmc ]; then
    mgt_ip=$(get_master_ip)
    [ -n "$mgt_ip" ] || exit 1
    eth_mac=$(cat /proc/cmdline | sed "s/ /\n/g" | awk -F= '{if($1=="BOOTIF") print $2}' | sed "s/01-//g" | sed "s/-/:/g")
    reset $eth_mac

    if [ "$(cat /global/xcat_boot.d/bmc)" == "c2s" ]; then
        find_hostname=$(echo $(ssh $mgt_ip "lsdef -t node -i mac" | sed "s/ //g") | sed "s/ mac=/|/g" | sed "s/Objectname:/\n/g" | sed "s/ //g" | awk -F\| -v mm=$eth_mac '{if($2==mm) print $1}')
        [ -n "$find_hostname" ] || exit 1
        ipmi_ip=$(ipmitool lan print | sed "s/ //g" | awk -F: '{if($1=="IPAddress") print $2}')
        [ -n "$find_hostname" ] && ssh $mgt_ip "chdef -t node -o $find_hostname bmc=$ipmi_ip"
    else
        ipmi_ip=$(ssh $mgt_ip "lsdef -t node -o $(hostname -s) -i bmc" | sed "s/ //g"| awk -F= '{if($1=="bmc") print $2}')
        netmask=$(grep NETWORKS_LINE1 /xcatpost/mypostscript |sed "s/||/\n/g" | awk -F= '{if($1=="mask") print $2}')
        ipmitool lan set 1 ipsrc static
        ipmitool lan set 1 ipaddr $ipmi_ip
        ipmitool lan set 1 netmask $netmask
        ipmitool lan set 1 defgw ipaddr 0.0.0.0
    fi
fi

