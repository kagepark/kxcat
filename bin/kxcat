#! /bin/bash
##########################################################
# Wrapper script for xCAT
# License : GPL
##########################################################
# Support Compute OS:
#  - CentOS 7.x
# Not support Compute OS:
#  - CentOS 6.x

_KXC_VERSION=1.4.5

error_exit() {
    echo "$*"
    exit 1
}

_KXC_HOME=$(dirname $(dirname $(readlink -f $0)))
_K_LIB=$_KXC_HOME/lib
tag=k
[ -f $_K_LIB/klib.so ] || error_exit "klib.so file not found"
. $_K_LIB/klib.so
[ -f $_KXC_HOME/etc/kxcat.cfg ] || error_exit "kxcat.cfg file not found"
. $_KXC_HOME/etc/kxcat.cfg

[ -f /etc/profile.d/xcat.sh ] && xcat_env=/etc/profile.d/xcat.sh
[ ! -n "$xcat_env" -a -f $_KXC_HOME/etc/xcat.sh ] && xcat_env=$_KXC_HOME/etc/xcat.sh
[ -n "$xcat_env" ] && source $xcat_env || error_exit "/etc/profile.d/xcat.sh not found"

_help() {
    echo "Base xCAT $(lsxcatd -v)"
    echo
    cat $_KXC_HOME/etc/kxcat.hlp
    echo "Usage: $(basename $0) command [<arg1> <arg2>....]"
    exit
}

if [ "$#" == "0" ]; then
  cat $_KXC_HOME/etc/kxcat.hlp
  exit
fi
cmd=$1
kcmd=$2
cmd_str="$(cat $_KXC_HOME/etc/kxcat.hlp | grep -v "^#" | awk '{print $1}')"

if [ "$cmd" == "help" -o "$cmd" == "--help" ]; then
    _help
elif [ "$cmd" == "version" -o "$cmd" == "--version" ]; then
    echo "$_KXC_VERSION"
    lsxcatd -a
else
   for cmdname in $cmd_str; do
      if [ "$cmd" == "$cmdname" ]; then
          _k_load xcat_$cmd || break
          shift 1
          trap '' 2
          $cmd "${@}"
          trap 2
          exit
      fi
   done
   echo "Unknown command ($cmd)"
fi
