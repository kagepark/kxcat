####################################
# Kage Park
# Re-designed(2017/09) by Kage Park
# Base design Using old xcat scripts(2011) of Kage
# License : GPL
####################################

nodelist=()


set() {
   local hostname opt
   opt=($*)
   if (( ${#opt[*]} < 1 )); then
         echo "${FUNCNAME} <group name> <host count#> [<node name1> <node name2>...]"
         exit
   fi
   group=$1
   if ! lsdef -t group $group >& /dev/null; then
        echo "group $group  not found"
        exit
   fi

   shift 1
   host_num=$1
   _k_misc_is_num $host_num >& /dev/null || error_exit "${FUNCNAME} <group name> <host count#> [<node name1> <node name2>...]"

   shift 1
   nodes=($*)
   (( ${#nodes[*]} == 0 )) && nodes=($(lsdef -t group nodes | grep "members=" | sed "s/members=//g" | sed "s/,/ /g"))

   ((${host_num} > $MAX_NODES)) && error_exit "defined too many <host count>. Please type less $MAX_NODES"
   ((${host_num} > ${#nodes[*]})) && error_exit "defined too many <host count>. Please type less free node count(${#nodes[*]})"
   hosts=""

   if [ ! -n "$nodes" ]; then
         echo "${FUNCNAME} <group name> <host count#> <node name1> [<node name2>...]"
         exit
   fi

   mxn=0
   for ii in $(lsdef -t group $group 2>/dev/null |grep members | awk -F= '{print $2}' | sed "s/\,/ /g"); do
      id=$(printf "%.0f" $(echo $ii | sed "s/${group}-//g"))
      nodelist[$id]=$id
      (($mxn < $id )) && mxn=$id
   done
   nodelist[0]=$mxn
   lastnn=$mxn
   #for ii in $nodes; do
   [ -d /tftpboot/mypostscripts ] || mkdir -p /tftpboot/mypostscripts
   for ((zz=0; zz<${host_num}; zz++)); do
       ii=${nodes[$zz]}
       nn=$(find_bid)
       [ -n "$nn" ] && lastnn=$nn || lastnn=$(($lastnn+1))
       host=${group}-$(printf "%04d" $lastnn)
       #echo "chdef -t node -o $ii -n $host $ii"
       chdef -t node -o $ii -n $host $ii || break
       chdef $host status=
       [ -n "$addhosts" ] && addhosts="$addhosts,$host" || addhosts=$host
       nodelist[$lastnn]=$lastnn

   done 
   #echo "chdef -t node $addhosts groups=all,nodes,${group}"
   [ -n "$addhosts" ] && chdef -t node $addhosts groups=all,${group} || exit 1

   #echo "nodeset ${addhosts} osimage=${group}"
   #nodeset ${group} osimage=$(awk -F: -v cname=${group} '{if($1==cname) print $2}' $_KXC_HOME/etc/group.map)
   #nodeset ${group} osimage=${group}
   nodeset ${addhosts} osimage=${group}
   sleep 4
   makehosts ${group} 2>/dev/null
   for ((zz=1; zz<${#nodelist[*]}; zz++)); do
      host=${group}-$(printf "%04d" ${nodelist[$zz]})
      [ -f /opt/xcat/share/xcat/mypostscript/mypostscript.tmpl ] && cp -a /opt/xcat/share/xcat/mypostscript/mypostscript.tmpl /tftpboot/mypostscripts/mypostscript.${host} || touch /tftpboot/mypostscripts/mypostscript.${host}
   done
}


find_bid() {
   for ((ii=1; ii <= ${nodelist[0]}; ii++)); do
       [ -n "${nodelist[$ii]}" ] && continue
       echo $ii
       break
   done
}
