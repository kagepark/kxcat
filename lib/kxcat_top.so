####################################
# Kage Park
# Re-designed(2017/09) by Kage Park
# Base design Using from old Kage's code
# License : GPL
####################################

top() {
  printf "Memory unit   : GB\n"
  echo "CPU Util unit : %"
  echo "Run Util unit : number"
  echo
  printf "%17s %5s %5s %5s %5s %5s %7s %7s %7s %7s %7s %7s\n" hostname user sys nice idle Run used free shared buffers cached total
  DSH_TIMEOUT=5
  xdsh $(echo $(nodels $(echo $* | sed "s/ /,/g") | grep -v "^n0") | sed "s/ /,/g") '(
       fcpul=( $(cat /proc/stat) )
       sleep 0.2
       lcpul=( $(cat /proc/stat) )
       user=`expr ${lcpul[1]} - ${fcpul[1]}`
       nice=`expr ${lcpul[2]} - ${fcpul[2]}`
       system=`expr ${lcpul[3]} - ${fcpul[3]}`
       idle=`expr ${lcpul[4]} - ${fcpul[4]}`
       iowait=`expr ${lcpul[5]} - ${fcpul[5]}`
       irq=`expr ${lcpul[6]} - ${fcpul[6]}`
       softirq=`expr ${lcpul[7]} - ${fcpul[7]}`
       steal=`expr ${lcpul[8]} - ${fcpul[8]}`

       total=`expr $user + $nice + $system + $idle + $iowait + $irq + $softirq + $steal`
       aa=100
       r_idle=`echo "$idle * $aa / $total" | bc`
       r_sys=`echo "$system * $aa / $total" | bc`
       r_nice=`echo "$nice * $aa / $total" | bc`
       r_user=`echo "$user * $aa / $total" | bc`

       mem=( $(free|grep Mem) )
       run=( $(cat /proc/stat |grep procs_running) )

       #(printf "%5s %5s %5s %5s %5s %10s %10s %10s %10s %10s %10s\n" $r_user $r_sys $r_nice $r_idle ${run[1]} `expr ${mem[2]} / 1024 `  `expr ${mem[3]} / 1024` `expr ${mem[4]} / 1024` `expr ${mem[5]} / 1024` `expr ${mem[6]} / 1024` `expr ${mem[1]} / 1024` )
       #printf "%5s %5s %5s %5s %5s %6.1f %6.1f %6.1f %6.1f %6.1f %6.1f" $r_user $r_sys $r_nice $r_idle ${run[1]} $(bc -l <<< "${mem[2]} / (1024 * 1024)") $(bc -l <<< "${mem[2]} / (1024*1024)")  $(bc -l <<< "${mem[3]} / (1024*1024)") $(bc -l <<< "${mem[4]} / (1024*1024)") $(bc -l <<< "${mem[5]} / (1024*1024)") $(bc -l <<< "${mem[6]} / (1024*1024)") $(bc -l <<< "${mem[1]} / (1024*1024)") 
       printf "%5s %5s %5s %5s %5s %6.1f %6.1f %6.1f %6.1f %6.1f %6.1f" $r_user $r_sys $r_nice $r_idle ${run[1]} $(bc -l <<< "${mem[2]} /(1024 * 1024)")  $(bc -l <<< "${mem[3]} / (1024*1024)") $(bc -l <<< "${mem[4]} / (1024*1024)")  $(bc -l <<< "${mem[5]} / (1024*1024)") $(bc -l <<< "${mem[6]} / (1024*1024)") $(bc -l <<< "${mem[1]} / (1024*1024)")
)' | sort | while read line; do
     printf "%17s %5s %5s %5s %5s %5s %7s %7s %7s %7s %7s %7s\n" $line
  done
}
