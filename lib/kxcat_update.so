####################################
# License : GPL
####################################

update() {
   if [ "$#" == "0" ]; then
       echo "update                    : ${FUNCNAME} <host|group>"
       echo "update rootimage file only: ${FUNCNAME} <group> -RI"
       echo "update syncfile           : ${FUNCNAME} <host|group> -F"
       echo "update Software(OS/Other) : ${FUNCNAME} <host|group> -S"
       echo "update boot script        : ${FUNCNAME} <host|group> -b"
       echo "update Postscript         : ${FUNCNAME} <host|group> -P [<script1 [<arg1> <arg2>...]>,<script2 [<arg1> <arg2>...]>....]"
       echo "Reinstall OS              : ${FUNCNAME} <host|group> -I"
       exit
   fi
   dest=$1
   shift 1
   opts=($*)
   for ((ii=0; ii<${#opts[*]}; ii++)); do #ii in $*; do
      if [ "${opts[$ii]}" == "-S" ]; then
          netboot_ignore_image=1
          unset opts[$ii]
      elif [ "${opts[$ii]}" == "-I" ]; then
          reinstall=1
          unset opts[$ii]
      fi
      elif [ "${opts[$ii]}" == "-RI" ]; then
          rootimage=1
          unset opts[$ii]
      fi
      if [ "${opts[$ii]}" == "-b" ]; then
          boot_script_update=1
          unset opts[$ii]
      fi
      #[ "$ii" == "-S" ] && netboot_ignore_image=1
      #[ "$ii" == "-b" ] && boot_script_update=1
   done

   if node_cnt=$(nodels $dest 2>/dev/null | wc -l); then
       [ "$node_cnt" == "1" ] && osimage=$(lsdef $dest -i provmethod  | grep "provmethod=" | awk -F= '{print $2}')
   fi
   if [ ! -n "$osimage" ]; then
       lsdef -t group $dest >& /dev/null && osimage=$dest
   fi
   if [ ! -n "$osimage" ]; then
       echo "Not found $dest"
       exit 1
   fi
   type=$(lsdef -t osimage $osimage  -i provmethod | grep "provmethod=" | awk -F= '{print $2}')
   if [ "$type" == "netboot" ]; then
      #/opt/xcat/bin/updatenode $* 2>/dev/null
      [ "$boot_script_update" != "1" -a "$reinstall" != "1" ] && /opt/xcat/bin/updatenode $dest ${opts[*]} 2>/dev/null
      if [ "$rootimage" == "1" ]; then
         packimage $osimage
         return 0
      elif [ "$netboot_ignore_image" != "1" ]; then
         [ "$boot_script_update" != "1" ] && genimage $osimage
         [ -d /install/groups/${osimage}/rootimg/xcatpost ] || mkdir -p /install/groups/${osimage}/rootimg/xcatpost
         [ -d /install/groups/${osimage}/rootimg/opt/xcat ] || mkdir -p /install/groups/${osimage}/rootimg/opt/xcat
         cp -a /install/postscripts/xcatpostinit1.netboot /install/groups/${osimage}/rootimg/opt/xcat/xcatpostinit1 2>/dev/null
         cp -a /install/postscripts/xcatdsklspost /install/groups/${osimage}/rootimg/opt/xcat/ 2>/dev/null
         rsync -a /install/postscripts/ /install/groups/${osimage}/rootimg/xcatpost/
         chmod +x /install/groups/${osimage}/rootimg/xcatpost/kxcatboot
         [ -d /install/groups/${osimage}/rootimg/root ] || mkdir -p /install/groups/${osimage}/rootimg/root
         [ -d /install/groups/${osimage}/rootimg/root/.ssh ] && rm -fr /install/groups/${osimage}/rootimg/root/.ssh
         rsync -a /root/.ssh  /install/groups/${osimage}/rootimg/root
         rm -f /install/groups/${osimage}/rootimg/root/.ssh/known_hosts
         touch /install/groups/${osimage}/rootimg/root/.ssh/known_hosts
         packimage $osimage
      fi
      nodeset $dest osimage=$osimage
   elif [ "$type" == "install" ]; then
      change_boot_mode=$(echo $(echo $(lsdef $dest -i currstate) | sed "s/Object name: /\n/g" | grep "currstate=boot" | awk '{print $1}') | sed "s/ /,/g")
      if [ "$boot_script_update" != "1" ]; then
        if [ "$reinstall" != "1" ]; then
          #/opt/xcat/bin/updatenode $* 2>/dev/null
          /opt/xcat/bin/updatenode $dest ${opts[*]} 2>/dev/null
        fi
      fi
      xdcp  $dest /install/postscripts/xcatpostinit1.install /opt/xcat/xcatpostinit1 >& /dev/null
      xdcp  $dest /install/postscripts/xcat_boot.d/*  /xcatpost/xcat_boot.d/ >& /dev/null
      xdcp  $dest /install/postscripts/kxcatboot /xcatpost/kxcatboot >& /dev/null
      if [ "$boot_script_update" != "1" ]; then
         nodeset $dest osimage=$osimage
         if [ "$reinstall" != "1" ]; then
           [ -n "$change_boot_mode" ] && nodeset $change_boot_mode boot
         fi
      fi
   else
      echo "Unknown image type"
   fi
}
